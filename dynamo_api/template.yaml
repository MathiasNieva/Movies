
AWSTemplateFormatVersion : '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31

Description: Lambda CloudFormation Lab
Resources:
  GetMovie:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getMovie
      Handler: movie.getMovie
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE: !Ref MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/movies/{movie_id}"
            Method: GET

  PutMovie:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putMovie
      Handler: movie.putMovie
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE: !Ref MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/movies/{movie_id}"
            Method: PUT
  
  GetRoomsPerDay:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getRoomsPerDay
      Handler: movie.getRoomsPerDay
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE: !Ref MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/roomsPerDay/movie/{movie_id}"
            Method: GET
            
  PutRoomsPerDay:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putRoomsPerDay
      Handler: movie.putRoomsPerDay
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE: !Ref MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/roomsPerDay/movie/{movie_id}"
            Method: PUT
            
  GetMovieRoom:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getMovieRoom
      Handler: movie.getMovieRoom
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE: !Ref MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/movies/{movie_id}/room/{room_id}"
            Method: GET
            
  PutMovieRoom:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putMovieRoom
      Handler: movie.putMovieRoom
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE: !Ref MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/movies/{movie_id}/room/{room_id}"
            Method: PUT
            
  GetRoom:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getRoom
      Handler: movie.getRoom
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE: !Ref MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/room/{room_id}"
            Method: GET

  PutRoom:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putRoom
      Handler: movie.putRoom
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE: !Ref MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/room/{room_id}"
            Method: PUT
            
  GetPerson:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getPerson
      Handler: movie.getPerson
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE: !Ref MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/person/{person_id}"
            Method: GET

  PutPerson:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putPerson
      Handler: movie.putPerson
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref MoviesTable
      Environment:
        Variables:
          MOVIES_TABLE: !Ref MoviesTable
      Events:
        GetMovies:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/person/{person_id}"
            Method: PUT
  
  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: movies-api
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: swagger.yaml
  
  MoviesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: movies-table
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S